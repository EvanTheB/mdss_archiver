Scripts for controlling mdss put / get on NCI.

Generally these scripts take a list of files to archive, with tab separated controls.
The script should be re-run on a timer, probably via ssh, until all files are done.
This is not perfect. There are still some hard coded parts.
Probably more errors to be dealt with. Use with caution.

There are facilities for limiting the number of concurrent jobs,
and eventually I hope to add total disk usage limits as well.

archive // put

    The put script tries to wait until the file is really on tape.
    I also made an attempt to make files appear in their final location atomically (with a ln or mv into place). But it is not fully possible.

    archive like this, 10 copyq job limit and delete gdata files after:

    while ssh eb8858@raijin.nci.org.au cd /g/data/mz4/evaben_cram_mdss \; python3 mdss_archive.py --put 10 files_20190730; do sleep 5m; done; alert

unarchive // get

    The get script tries to 'get' files after they are already on disk, and tries not to stage files unnecessarily.

    unarchive like this, 10 copyq job limit and 1TB 'stage' limit:

    while ssh eb8858@raijin.nci.org.au cd /g/data/wq2/users/eb8858/isks/unarchiver \; python3 mdss_unarchive.py isks_mdss.unarchive --get-lim 10 --staging-lim 1000_000_000_000; do sleep 5m; done; alert


MDSS dmls states (probably similar at NCI):
https://www.nas.nasa.gov/hecc/support/kb/data-migration-facility-(dmf)-commands_250.html

REG     Regular. The file exists only online, on active disk.
OFL     Offline. The file's directory entry remains on disk, but its data blocks are located offline only (on tape).
DUL     Dual-state. Identical copies of the file exist online (on disk) and offline (on tape). The online copy will persist if there is no demand for free space in its filesystem. When free space is needed, the online copy of the file is removed, leaving just the offline copy; the file becomes "offline." If you make any change to a dual-state file, the offline copy becomes out of date and invalid, and the file is once again a "regular" file.
MIG     Migrating. The file is in process of migrating from disk to tape.
UNM     Unmigrating. The file has been recalled and is in process of moving back from tape to disk.
NMG     Nonmigratable. The file cannot be migrated.
INV     Invalid. DMF cannot determine the file's state. The most likely reason is that it is in a filesystem that does not use DMF.
